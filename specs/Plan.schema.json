{
  "$schema": "http://json-schema.org/draft/2020-12/schema",
  "title": "Execution Plan",
  "description": "Deterministic plan consumed by n8n implementor/reviewer agents",
  "type": "object",
  "required": ["plan_id", "from_prd_id", "created_at", "tasks", "approvals"],
  "properties": {
    "plan_id": { "type": "string", "pattern": "^[A-Za-z0-9][A-Za-z0-9._-]*$" },
    "from_prd_id": { "type": "string" },
    "created_at": { "type": "string", "format": "date-time" },
    "tasks": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["id", "title", "description", "requirement_ids", "depends_on", "inputs", "files_to_touch", "operations", "expected_outputs", "validation", "skip_if_satisfied", "return_envelope_contract", "model", "retries"],
        "properties": {
          "id": { "type": "string", "pattern": "^[A-Za-z0-9][A-Za-z0-9._-]*$" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "requirement_ids": { "type": "array", "items": { "type": "string" } },
          "depends_on": { "type": "array", "items": { "type": "string" } },
          "external_dependencies": { "type": "array", "items": { "type": "string" } },
          "inputs": {
            "type": "object",
            "description": "Deterministic parameters the implementor must use",
            "additionalProperties": true
          },
          "files_to_touch": { "type": "array", "items": { "type": "string" } },
          "operations": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "required": ["op"],
              "properties": {
                "op": {
                  "type": "string",
                  "enum": ["create_file", "modify_file", "delete_file", "modify_yaml", "add_test", "run_command", "search_replace"]
                },
                "path": { "type": "string" },
                "params": {
                  "type": "object",
                  "description": "Operation-specific parameters",
                  "additionalProperties": true
                }
              },
              "additionalProperties": false
            }
          },
          "expected_outputs": { "type": "array", "items": { "type": "string" } },
          "validation": {
            "type": "object",
            "properties": {
              "ci_checks": { "type": "array", "items": { "type": "string" } },
              "commands": { "type": "array", "items": { "type": "string" } },
              "test_names": { "type": "array", "items": { "type": "string" } },
              "diff_rules": { "type": "array", "items": { "type": "string" } }
            },
            "additionalProperties": false
          },
          "skip_if_satisfied": {
            "type": "array",
            "description": "Deterministic predicates; e.g., file_exists:PATH, tests_pass:NAME",
            "items": { "type": "string" }
          },
          "return_envelope_contract": {
            "type": "object",
            "required": ["patch_strategy", "checksums"],
            "properties": {
              "patch_strategy": { "type": "string", "enum": ["atomic", "apply_and_test"] },
              "checksums": { "type": "boolean" },
              "test_matrix": { "type": "array", "items": { "type": "string" } }
            },
            "additionalProperties": false
          },
          "model": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "description": "e.g., gpt-5-nano, gpt-5-mini" },
              "max_calls": { "type": "integer", "minimum": 1 },
              "max_usd": { "type": "number", "minimum": 0 },
              "escalation_policy": { "type": "string" }
            },
            "additionalProperties": false
          },
          "retries": {
            "type": "object",
            "properties": {
              "max_attempts": { "type": "integer", "minimum": 0 },
              "backoff": { "type": "string", "enum": ["none", "linear", "exponential"] }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    },
    "approvals": {
      "type": "object",
      "required": ["stage", "prod"],
      "properties": {
        "stage": {
          "type": "object",
          "properties": {
            "validation_steps": { "type": "array", "items": { "type": "string" } }
          },
          "additionalProperties": false
        },
        "prod": {
          "type": "object",
          "properties": {
            "validation_steps": { "type": "array", "items": { "type": "string" } }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "execution_hints": {
      "type": "object",
      "properties": {
        "parallelism": { "type": "integer", "minimum": 1 },
        "batching": { "type": "string" },
        "environment_notes": { "type": "string" }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "$comment": "Uniqueness of task IDs and cross-file referential integrity (e.g., PRD requirement/dependency IDs) should be enforced by CI validators or runtime checks."
}
